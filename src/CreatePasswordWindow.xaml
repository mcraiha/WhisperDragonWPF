<Window x:Class="WhisperDragonWPF.CreatePasswordWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WhisperDragonWPF"
        mc:Ignorable="d"
        Title="Generate Password" MinWidth="350" SizeToContent="WidthAndHeight">

        <StackPanel>
            <TabControl>
                <TabItem Header="Random">
                    <StackPanel>
                        <Label Content="Length of generated password:" Margin="2,5,2,2" />
                        <TextBox Name="passwordLength" Text="{Binding PasswordLength}" PreviewTextInput="PasswordLengthValidationTextBox" Margin="2,0,2,2" />

                        <Separator Margin="3" />

                        <CheckBox IsChecked="{Binding IncludeUpperCaseLatinLetters}" Margin="2,0,2,2">Upper-case latin characters (e.g. A, C, K, Z)</CheckBox>
                        <CheckBox IsChecked="{Binding IncludeLowerCaseLatinLetters}" Margin="2,0,2,2">Lower-case latin characters (e.g. a, c, k, z)</CheckBox>
                        <CheckBox IsChecked="{Binding IncludeDigits}" Margin="2,0,2,2">Digits (e.g. 4, 6, 9)</CheckBox>
                        <CheckBox IsChecked="{Binding IncludeSpecialCharactersASCII}" Margin="2,0,2,2">Special characters ASCII (!"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~)</CheckBox>
                        <CheckBox IsChecked="{Binding IncludeEmojis}" Margin="2,0,2,2">Basic emoji (e.g. ðŸ˜Š)</CheckBox>

                        <Separator Margin="3" />

                        <TextBox Name="password" IsReadOnly="True" Text="{Binding GeneratedPassword, UpdateSourceTrigger=PropertyChanged}" Margin="2,0,2,2" />
                        <CheckBox IsChecked="{Binding VisiblePassword}" Margin="2,0,2,2">Visible</CheckBox>

                        <StackPanel Orientation="Horizontal">
                            <Button Margin="10" Command="{Binding CopyToClipboardCommand}" Padding="3,3,3,3">Copy to Clipboard</Button>
                            <Button Margin="10" Command="{Binding GeneratePasswordCommand}" Padding="3,3,3,3">Generate</Button>
                        </StackPanel>

                        <Separator Margin="3" />

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Margin="10" Command="{Binding UseCommand}" Visibility="{Binding VisibilityUsePassword}" Padding="3,3,3,3">Use password</Button>
                            <Button Margin="10" Command="{Binding CloseCommand}" Padding="3,3,3,3">Close</Button>
                        </StackPanel>
                    </StackPanel>
                </TabItem>

                <TabItem Header="Pronounceable">
                    <StackPanel>
                        <Label Content="Language:" Margin="2,5,2,2" />
			            <ComboBox ItemsSource="{Binding Languages}" SelectedItem="{Binding SelectedLanguage, Mode=TwoWay}" Margin="2,0,2,2"></ComboBox>

                        <Separator Margin="3" />

                        <CheckBox IsChecked="{Binding StartWithUpperCase}" Margin="2,0,2,2">Start with Upper-case (e.g. A, C, K, Z)</CheckBox>
                        <CheckBox IsChecked="{Binding IncludeNumbers}" Margin="2,0,2,2">Include number (e.g. 1, 15 or 76)</CheckBox>
                        <CheckBox IsChecked="{Binding IncludeSpecialCharSimple}" Margin="2,0,2,2">Include special character</CheckBox>

                        <Separator Margin="3" />

                        <TextBox Name="passwordPronounceable" IsReadOnly="True" Text="{Binding GeneratedPronounceablePassword, UpdateSourceTrigger=PropertyChanged}" Margin="2,0,2,2" />
                        <CheckBox IsChecked="{Binding VisiblePassword}" Margin="2,0,2,2">Visible</CheckBox>

                        <StackPanel Orientation="Horizontal">
                            <Button Margin="10" Command="{Binding CopyPronounceableToClipboardCommand}" Padding="3,3,3,3">Copy to Clipboard</Button>
                            <Button Margin="10" Command="{Binding GeneratePronounceablePasswordCommand}" Padding="3,3,3,3">Generate</Button>
                        </StackPanel>
                    </StackPanel>
                </TabItem>
            </TabControl>
        </StackPanel>
</Window>